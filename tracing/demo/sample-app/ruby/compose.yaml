services:
  app:
    container_name: sample-app
    build:
      context: .
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: mysql
      DATABASE_HOST: db
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4319"
      OTEL_SERVICE_NAME: "otel-sample-app"
    depends_on:
      db:
        condition: service_healthy
      otel-collector:
        condition: service_started
    networks:
      - sample-app

  db:
    container_name: sample-db
    image: public.ecr.aws/docker/library/mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: mysql
    networks:
      - sample-app
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 2s
      timeout: 1s
      retries: 5

  otel-collector:
    container_name: sample-otel-collector
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 4319:4319
    env_file:
      - ../../env.txt
    networks:
      - sample-app

networks:
  sample-app:
